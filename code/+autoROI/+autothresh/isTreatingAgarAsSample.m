function [isFindingAgar,stats] = isThreshTreatingAgarAsSample(stats,tileSizeInMicrons,micsPix)
    % Test wheether this threshold may be causing the agar to look like the sample
    %
    % function [isFindingAgar,stats] = autoROI.autothresh.isThreshTreatingAgarAsSample(stats,tileSizeInMicrons,micsPix)
    %
    % Purpose
    % Examines each threshold in turns and determines whether there is evidence that it's
    % treating agar as a ROIs. This can happen when the user has a huge ROI that includes
    % regions outside of the agar.
    %
    % NOTE: This function was used at one point but subesequent changes to the code
    %.      seem to have made it redundant. 27/05.2020
    %
    % Outputs
    % isFindaingAgar - vector of bools indicating which thresholds seem to containing agar as sample
    % stats - detailed info

    verbose=false;
    doPlots=true;

    propTileSizeROIs = zeros(1,length(stats));
    nROIs = zeros(1,length(stats));
    seemsLikeGrid = zeros(1,length(stats));

    tileArea = (tileSizeInMicrons * 1E-3)^2;

    for ii = 1:length(stats)

        if isnan(stats(ii).nRois)
            if verbose
                fprintf('isThreshTreatingAgarAsSample loop %d/%d finds NaNs. skipping.\n', ii, length(stats))
            end
            continue
        end

        % bwStats is generated by autoROI.binarizeImage
        tmp=stats(ii).bwStats.step_three.Area_sqmm;
        % How many ROIs have a size that looks like it could be a single tile?
        propTileSizeROIs(ii) = mean(tmp>tileArea*0.125 & tmp<tileArea*0.5);
        nROIs(ii) = length(tmp);

        % Does there seem to be a grid pattern in the centroid locations?
        c=stats(ii).bwStats.step_two.Centroid;
        c=round(c/10)*10 ;
        dx=diff(sort(c(:,1)));
        dy=diff(sort(c(:,1)));
        d=[dx;dy];

        if (sum(d==0)/length(d))>0.4
            seemsLikeGrid(ii)=1;
        end

    end

    % TODO: nROIs threshold should be smarter than this. 
    isFindingAgar = nROIs>30  &  propTileSizeROIs>0.5 &  seemsLikeGrid;

    if sum(isFindingAgar)==1;
        disp('ONLY ONE SITUATION THINKS IT IS AGAR. NOT REMOVING.')
       % 
    end
    % insert these values into the stats array
    for ii=1:length(stats)
        stats(ii).thinksAgarIsAROI = isFindingAgar(ii);
    end

    if verbose
        fprintf('\nIs thresh treating agar as sample?\n')
        disp([stats.tThreshSD])
        disp(propTileSizeROIs)
        disp(nROIs)
        disp(seemsLikeGrid)
        disp(isFindingAgar)
    end

    if doPlots
        clf 

        subplot(2,2,1)
        plot([stats.tThreshSD],propTileSizeROIs,'*k-')
        hold on
        plot([stats(isFindingAgar).tThreshSD],propTileSizeROIs(isFindingAgar),'or','markersize',12)
        xlabel('tThreshSD')
        ylabel('propTileSizeROIs')
        grid

        subplot(2,2,2)
        plot([stats.tThreshSD],nROIs,'*k-')
        hold on
        plot([stats(isFindingAgar).tThreshSD],nROIs(isFindingAgar),'or','markersize',12)

        xlabel('tThreshSD')
        ylabel('nROIs')
        grid

    end


end %isThreshTreatingAgarAsSample

